'use client';

import { AppLayout } from '@/components/app-layout';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';
import { challenges } from '@/lib/data';
import { Bot, Puzzle, BrainCircuit } from 'lucide-react';
import Link from 'next/link';
import { useToast } from '@/hooks/use-toast';

const gameChallenges = [
    {
        title: 'Eco Word Scramble',
        description: 'Test your knowledge by unscrambling sustainability-themed words generated by AI.',
        points: 50,
        icon: Puzzle,
        href: '/puzzle-game',
    },
    {
        title: 'Eco Situation Simulator',
        description: 'Make choices in AI-generated scenarios to see how sustainable you are.',
        points: 10,
        icon: Bot,
        href: '/situation-game',
    },
    {
        title: 'Carbon IQ Challenge',
        description: 'Test your knowledge on carbon emission reduction practices with this AI quiz.',
        points: 10,
        icon: BrainCircuit,
        href: '/carbon-quiz',
    }
]

export default function ChallengesPage() {
  const { toast } = useToast();

  const handleAcceptChallenge = (title: string, points: number) => {
    toast({
      title: 'Challenge Accepted!',
      description: `You've accepted the "${title}" challenge. Good luck! You can earn ${points} points.`,
    });
  };

  return (
    <AppLayout>
      <div className="space-y-8">
        <header>
          <h2 className="text-3xl font-bold tracking-tight font-headline">
            Sustainability Challenges
          </h2>
          <p className="text-muted-foreground mt-1">
            Join a challenge, earn points, and make a real-world impact.
          </p>
        </header>
        <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-3">
          {gameChallenges.map((challenge, index) => (
             <Card key={`game-${index}`} className="flex flex-col">
              <CardHeader className="flex-row items-start gap-4 space-y-0">
                <div className="flex-shrink-0">
                    <challenge.icon className="h-8 w-8 text-primary" />
                </div>
                <div className="flex-grow">
                  <CardTitle className="font-headline text-lg">{challenge.title}</CardTitle>
                  <CardDescription className="text-sm">{challenge.description}</CardDescription>
                </div>
              </CardHeader>
              <CardContent className="flex-grow"></CardContent>
              <CardFooter className="flex justify-between items-center">
                <div className="font-bold text-primary">Up to {challenge.points} Points</div>
                <Button asChild>
                    <Link href={challenge.href}>Play Game</Link>
                </Button>
              </CardFooter>
            </Card>
          ))}
          {challenges.map((challenge, index) => (
            <Card key={index} className="flex flex-col">
              <CardHeader className="flex-row items-start gap-4 space-y-0">
                <div className="flex-shrink-0">
                    <challenge.icon className="h-8 w-8 text-primary" />
                </div>
                <div className="flex-grow">
                  <CardTitle className="font-headline text-lg">{challenge.title}</CardTitle>
                  <CardDescription className="text-sm">{challenge.description}</CardDescription>
                </div>
              </CardHeader>
              <CardContent className="flex-grow"></CardContent>
              <CardFooter className="flex justify-between items-center">
                <div className="font-bold text-primary">{challenge.points} Points</div>
                <Button onClick={() => handleAcceptChallenge(challenge.title, challenge.points)}>
                  Accept Challenge
                </Button>
              </CardFooter>
            </Card>
          ))}
        </div>
      </div>
    </AppLayout>
  );
}
